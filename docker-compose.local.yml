version: '3.8'

services:
  db:
    image: postgres:15.2-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  # redis:
  #   image: redis:7-alpine
  #   volumes:
  #     - redis_data:/data
  #   ports:
  #     - 6379:6379
    # env_file:
    #   - ./compose/.env
    # command: redis-server --requirepass ${REDIS_PASSWORD}

  # celery_worker:
  #   build:
  #     context: .
  #     dockerfile: ./compose/django/Dockerfile
  #   image: api
  #   command: /start-celeryworker
  #   volumes:
  #     - .:/app
  #     - media:/app/public
  #   depends_on:
  #     - redis
  #   env_file:
  #     - ./compose/.env
  #   restart: always

  # celery_beat:
  #   build:
  #     context: .
  #     dockerfile: ./compose/django/Dockerfile
  #   image: api
  #   command: /start-celerybeat
  #   volumes:
  #     - .:/app
  #     - media:/app/public
  #   depends_on:
  #     - redis
  #   env_file:
  #     - ./compose/.env
  #   restart: always

volumes:
    postgres_data:
    # redis_data:
