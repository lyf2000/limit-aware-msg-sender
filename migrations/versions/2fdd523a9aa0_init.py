"""init

Revision ID: 2fdd523a9aa0
Revises: 
Create Date: 2024-05-10 16:53:30.398074

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = "2fdd523a9aa0"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


class PlatformTypeChoices:
    TELEGRAM = 1
    VK = 2

    CHOICES = (
        (TELEGRAM, "telegram"),
        (VK, "vk"),
    )


class MessageStatusChoices:
    WAITING = 0
    SENT = 1
    ERROR = -1

    CHOICES = (
        (WAITING, "waiting"),
        (SENT, "sent"),
        (ERROR, "error"),
    )


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "platforms",
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column(
            "type",
            sqlalchemy_utils.types.choice.ChoiceType(PlatformTypeChoices.CHOICES, impl=sa.Integer()),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_platforms")),
    )
    op.create_table(
        "clients",
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("token", sa.String(length=256), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["platform_id"], ["platforms.id"], name=op.f("fk_clients_platform_id_platforms")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_clients")),
        sa.UniqueConstraint("platform_id", "token", name=op.f("uq_clients_platform_id")),
    )
    op.create_table(
        "conversation_types",
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("key", sa.String(length=64), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["platform_id"], ["platforms.id"], name=op.f("fk_conversation_types_platform_id_platforms")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_conversation_types")),
        sa.UniqueConstraint("key", "platform_id", name=op.f("uq_conversation_types_key")),
    )
    op.create_table(
        "conversation_rules",
        sa.Column("conversation_type_id", sa.Integer(), nullable=False),
        sa.Column("period", sa.Integer(), nullable=False),
        sa.Column("available", sa.Integer(), nullable=False),
        sa.Column("per_chat", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["conversation_type_id"],
            ["conversation_types.id"],
            name=op.f("fk_conversation_rules_conversation_type_id_conversation_types"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_conversation_rules")),
    )
    op.create_table(
        "message_events",
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("chat_id", sa.String(length=64), nullable=False),
        sa.Column("reply_to", sa.String(length=64), nullable=True),
        sa.Column(
            "status",
            sqlalchemy_utils.types.choice.ChoiceType(MessageStatusChoices.CHOICES, impl=sa.Integer()),
            nullable=True,
        ),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["client_id"], ["clients.id"], name=op.f("fk_message_events_client_id_clients")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_message_events")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("message_events")
    op.drop_table("conversation_rules")
    op.drop_table("conversation_types")
    op.drop_table("clients")
    op.drop_table("platforms")
    # ### end Alembic commands ###
